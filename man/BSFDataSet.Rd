% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllClasses.R
\docType{class}
\name{BSFDataSet}
\alias{BSFDataSet}
\title{BSFDataSet object and constructors}
\usage{
BSFDataSet(ranges, meta, forceEqualNames = TRUE, silent = FALSE)

BSFDataSet(ranges, meta, forceEqualNames = TRUE, silent = FALSE)
}
\arguments{
\item{ranges}{a \code{GenomicRanges} with the desired ranges to process. The
strand slot must be either + or -.}

\item{meta}{a \code{data.frame} with a minimum of three columns. The first
column holds sample type information, such as the condition. The second and
third column must be named 'clPlus' and 'clMinus' and must contain the path
to the files with the individual crosslink events. This can be in .bw (bigwig)
format for example.
See the vignette for how such files can be obtained from sequenced reads.}

\item{forceEqualNames}{to maintain the integrity of chromosome names (TRUE/ FALSE).
The option ensures that chromosome names present in the GRanges are also all
present in the signal list and vice versa. Chromosomes names present in only
the signal list or the ranges are removed.}

\item{silent}{suppress loading message (TRUE/ FALSE)}
}
\value{
A BSFDataSet object.
}
\description{
\code{BSFDataSet} contains the class \code{GenomicRanges}, which is used to
store input ranges. It enforces for all ranges to have a "+" or "-" strand annotation,
"*" is not allowed. Alongside these ranges meta data is stored as \code{data.frame}.
This dataframe needs to contain three columns which must be named "condition",
"clPlus" and "clMinus". It is used to provide the location to the iCLIP
coverage files to the import function. On object initialization these files
are loaded and internally represented as RLE-Lists.
See the vignette for different construction examples.
}
\examples{

# load data
csFile <- system.file("extdata", "PureCLIP_crosslink_sites_example.bed",
 package="BindingSiteFinder")
cs = rtracklayer::import(con = csFile, format = "BED")
clipFiles <- system.file("extdata", package="BindingSiteFinder")

# two experimental conditions
meta = data.frame(condition = factor(c("WT", "WT", "KD", "KD"), levels = c("KD", "WT")),
clPlus = list.files(clipFiles, pattern = "plus.bw$", full.names = TRUE),
clMinus = list.files(clipFiles, pattern = "minus.bw$", full.names = TRUE))
bds = BSFDataSet(ranges = cs, meta = meta, forceEqualNames = TRUE)

# one experimental condition
meta = data.frame(condition = c("WT", "WT", "WT", "WT"),
clPlus = list.files(clipFiles, pattern = "plus.bw$", full.names = TRUE),
clMinus = list.files(clipFiles, pattern = "minus.bw$", full.names = TRUE))
bds = BSFDataSet(ranges = cs, meta = meta)

}
